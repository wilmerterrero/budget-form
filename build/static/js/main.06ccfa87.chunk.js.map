{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","components/Swalert.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarRestante","guardarPresupuesto","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","Swalert","cambiarSwal","Swal","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","footer","App","mostrarpregunta","guardarGastos","creargasto","err","presupuestoInsuficiente","swl","useEffect","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.06ccfa87.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n)\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\n \r\nexport default Error;\r\n","import React, {Fragment, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({guardarRestante, guardarPresupuesto, actualizarPregunta}) => {\r\n\r\n    //states\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad( parseInt(e.target.value, 10) )\r\n    }\r\n\r\n    //Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        //Validation\r\n        if( cantidad < 1 || isNaN( cantidad ) ){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //After Validation\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n\r\n    }\r\n    \r\n    return (  \r\n        <Fragment>\r\n            <h2>Coloca tu Presupuesto</h2>\r\n\r\n            {error ? <Error mensaje=\"El Presupuesto es Incorrecto\" /> : null}\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto} \r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pregunta;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\nimport shortid from 'shortid'\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //cuando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        //validation\r\n        if(cantidad < 1 || isNaN( cantidad ) || nombre.trim === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        //pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n\r\n        //resetear el form\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n    \r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}          \r\n        >\r\n            <h2>Agrega tus gatos aqui</h2>\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o \r\n            Presupuesto Incorrecto\"/> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 500\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value))}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n)\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto\r\n                key={gasto.id} \r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n \r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n\r\n    //cambiamos la clase del input segun el restante que quede del presupuesto\r\n\r\n    //clase CSS\r\n    let clase;\r\n\r\n    //75%\r\n    if( (presupuesto / 4) > restante ){\r\n        clase = 'alert alert-danger'\r\n    } \r\n    //50%\r\n    else if( (presupuesto / 2) > restante ){\r\n        clase = 'alert alert-warning'\r\n    } \r\n    //100%\r\n    else{\r\n        clase = 'alert alert-success'\r\n    }\r\n\r\n    return clase;\r\n}\r\n","import React,{Fragment} from 'react';\r\nimport { revisarPresupuesto } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Swalert = ({ cambiarSwal }) => {\r\n  Swal.fire({\r\n    title: \"¡Bienvenido!\",\r\n    text: \"Con esta Aplicación Web podrás calcular tu Presupuesto.\",\r\n    imageUrl:\r\n      \"https://www.gestion.org/wp-content/uploads/2014/07/que-es-presupuesto-662x551.jpg\",\r\n    imageWidth: 400,\r\n    imageHeight: 200,\r\n    imageAlt: \"Custom image\",\r\n    footer: 'By Wilmer Terrero'\r\n  });\r\n\r\n  //mandamos el state a false para que solo lo muestre una vez\r\n  cambiarSwal(false);\r\n  \r\n  return <div></div>;\r\n};\r\n\r\nexport default Swalert;\r\n","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\nimport Error from './components/Error';\nimport Swalert from './components/Swalert'\n\nfunction App() {\n\n  //states\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]); //con este iteramos y guardamos nuevos gastos\n  const [gasto, guardarGasto] = useState({}); //con este creamos un nuevo gasto\n  const [creargasto, guardarCrearGasto] = useState(false);\n  const [err, presupuestoInsuficiente] = useState(false);\n  const [swl, cambiarSwal] = useState(true);\n\n  //useEffect que actualiza el restante\n  useEffect(() => {\n\n    if(creargasto){\n      //agrega el nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      //resta el presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n\n      //revisamos que este no sea negativo\n      if(presupuestoRestante < 0){\n        presupuestoInsuficiente(true);\n        guardarCrearGasto(false);\n        return;\n      } else{\n        guardarRestante(presupuestoRestante);\n        presupuestoInsuficiente(false);\n      }\n\n      //agrega el gasto y despues vuelve a false\n      guardarCrearGasto(false);\n    }\n  }, [creargasto, gasto, gastos, restante]);\n  \n\n  return (\n    <div className=\"container\">\n      {/* MOSTRANDO UNA VEZ EL SWAL */}\n      {swl ? (\n        <Swalert\n          cambiarSwal={cambiarSwal}\n        />\n      ) : null}\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className=\"contenido-principal contenido\">\n          {/* CARGA CONDICIONAL DE UN COMPONENTE */}\n          {/* LOGICA: ? es true al inicio : en el componente Pregunta despues de recibir\n           el presupuesto, pasa a false */}\n          {mostrarpregunta ? (\n              <Pregunta\n                guardarPresupuesto = {guardarPresupuesto}\n                guardarRestante = {guardarRestante}\n                actualizarPregunta = {actualizarPregunta}\n              />\n          ) : (\n            <div className=\"row\">\n            <div className=\"one-half column\">\n              { err ? <Error mensaje=\"Saldo Insuficiente\"/> : null}\n              <Formulario \n                guardarGasto = {guardarGasto}\n                guardarCrearGasto = {guardarCrearGasto}\n              />\n            </div>\n            <div className=\"one-half column\">  \n                <Listado \n                  gastos={gastos}\n                />\n\n                <ControlPresupuesto \n                  presupuesto={presupuesto}\n                  restante={restante}\n                />     \n            </div>\n          </div>\n          )}\n          \n          \n        </div>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}